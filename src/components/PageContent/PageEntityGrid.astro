---
import PageEntityItem from "./PageEntityItem.astro";
import EntityDataJsonFile from "../../../public/EntityDataJsonFile.json";

const { gridOriginFilter, gridClassFilter } = Astro.props;
const entityBasePath = "../battle-entities/";
const filteredGridArray = EntityDataJsonFile.entityDataJsonArray
	.reduce(filterOriginName, [])
	.reduce(filterClassName, []);

function filterClassName(totalArray, currentValue) {
	if (gridClassFilter) {
		if (currentValue["Class"] === gridClassFilter) {
			totalArray.push(currentValue);
		}
	} else {
		totalArray.push(currentValue);
	}
	//
	return totalArray;
}
function filterOriginName(totalArray, currentValue) {
	if (gridOriginFilter) {
		if (currentValue["Origin"] === gridOriginFilter) {
			totalArray.push(currentValue);
		}
	} else {
		totalArray.push(currentValue);
	}
	//
	return totalArray;
}
---

<section class="cms-nav">
	<section class="cards-nav">
		<ul class="fluid-grid fluid-grid--minimal">
			{
				filteredGridArray.map((entityData) => (
					<PageEntityItem 
					cardTitle={entityData.Name}
					cardLink= {entityBasePath + entityData.Name.toString().toLowerCase().split(' ').join('-')})
					cardLogo="/preact.svg" />
				))
			}
		</ul>
	</section>
</section>

<style>
	.fluid-grid {
		--column-min-width: 13rem;
		text-align: start;
		padding: 2rem 0;
		display: grid;
		grid-template-columns: repeat(
			auto-fill,
			minmax(var(--column-min-width), 1fr)
		);
		grid-template-columns: repeat(
			auto-fill,
			minmax(min(var(--column-min-width), 100%), 1fr)
		);
		gap: 2rem;
		list-style: none;
		align-items: start;
	}

	.fluid-grid--minimal {
		--column-min-width: 6rem;
		gap: 1.5rem 0.75rem;
	}
</style>
